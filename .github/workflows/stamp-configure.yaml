name: '4. Stamp Configure'

on:
  workflow_dispatch:

env:
  OSDU_VERSION: v0.11.0
  CLUSTER: osdu-stamp

jobs:

  flux-setup:
    name: Gitops Configuration
    env:
      GITHUB_TOKEN: ${{ secrets.GH_REPO_TOKEN }}

    runs-on: ubuntu-latest
    steps:
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Environment Settings
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
            ENV_CLUSTER=$(az aks list --resource-group $GROUP --query [].name -otsv)
            echo "CLUSTER_RESOURCE_GROUP=$GROUP" >> $GITHUB_ENV
            echo "CLUSTER_NAME=$ENV_CLUSTER" >> $GITHUB_ENV

      - name: AKS Context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - name: Install Flux
        run: curl -s https://fluxcd.io/install.sh | bash;

      - name: Bootstrap Flux
        run: flux bootstrap github --owner=${{ github.repository_owner }} --repository=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2	) --branch=main --path=./clusters/${{ env.CLUSTER }}

      - name: GitOps Checkout
        uses: actions/checkout@v2

      - name: Retrieve Stamp Env Variables
        run: |
          mkdir -p $GITHUB_WORKSPACE/clusters/$CLUSTER
          mkdir -p $GITHUB_WORKSPACE/apps/$CLUSTER/

          GROUP=$(az group list --query "[?contains(name, 'cpl${{ secrets.RAND }}')].name" -otsv)
          ENV_VAULT=$(az keyvault list --resource-group $GROUP --query [].name -otsv)
          REGISTRY=$(az acr list -g $GROUP --query [0].loginServer -otsv)
          DP_GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
          DNS_HOST=$(az network public-ip list --resource-group $DP_GROUP --query [].dnsSettings.fqdn -otsv)

          echo "GROUP=$GROUP" >> $GITHUB_ENV
          echo "ENV_VAULT=$ENV_VAULT" >> $GITHUB_ENV
          echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
          echo "DP_GROUP=$DP_GROUP" >> $GITHUB_ENV
          echo "DNS_HOST=$DNS_HOST" >> $GITHUB_ENV

      - name: Configure Sealed Secrets
        run: |
          cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/sealed-secrets.yaml <<EOF
          ---
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
          kind: Kustomization
          metadata:
            name: sealed-secrets
            namespace: flux-system
          spec:
            interval: 5m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./apps/base/sealed-secrets
            prune: true
            validation: client
            healthChecks:
              - kind: Deployment
                name: sealed-secrets
                namespace: kube-system
          EOF

      - name: Configure OSDU Stamp
        run: |
          flux create source git helm-charts-azure \
            --url https://community.opengroup.org/osdu/platform/deployment-and-operations/helm-charts-azure \
            --interval 1m \
            --branch release/0.11 \
            --export > $GITHUB_WORKSPACE/clusters/$CLUSTER/helm-charts-azure.yaml

          cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/osdu-stamp.yaml <<EOF
          ---
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
          kind: Kustomization
          metadata:
            name: osdu-stamp
            namespace: flux-system
          spec:
            interval: 5m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./apps/$CLUSTER/
            prune: true
            validation: client
            healthChecks:
            - kind: Deployment
              name: env-debug
              namespace: dev-sample
            - kind: Deployment
              name: istio-operator
              namespace: istio-operator
            - kind: Deployment
              name: istiod
              namespace: istio-system
            - kind: Deployment
              name: istio-ingressgateway
              namespace: istio-system
            - kind: Deployment
              name: appinsights-statsd
              namespace: airflow
            - kind: Deployment
              name: log-processor
              namespace: airflow
            - kind: Deployment
              name: default
              namespace: osdu-azure
            - kind: Deployment
              name: token
              namespace: dev-sample
            - kind: Deployment
              name: partition
              namespace: osdu-azure
            - kind: Deployment
              name: entitlements
              namespace: osdu-azure
            - kind: Deployment
              name: legal
              namespace: osdu-azure
            - kind: Deployment
              name: storage
              namespace: osdu-azure
            - kind: Deployment
              name: schema
              namespace: osdu-azure
            - kind: Deployment
              name: file
              namespace: osdu-azure
            - kind: Deployment
              name: dataset
              namespace: osdu-azure
            - kind: Deployment
              name: indexer
              namespace: osdu-azure
            - kind: Deployment
              name: indexer-queue
              namespace: osdu-azure
            - kind: Deployment
              name: search
              namespace: osdu-azure
            - kind: Deployment
              name: notification
              namespace: osdu-azure
            - kind: Deployment
              name: register
              namespace: osdu-azure
            - kind: Deployment
              name: unit
              namespace: osdu-azure
            - kind: Deployment
              name: crs-catalog
              namespace: osdu-azure
            - kind: Deployment
              name: crs-conversion
              namespace: osdu-azure
            - kind: Deployment
              name: wks
              namespace: osdu-azure
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/kustomization.yaml << EOF
          ---
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources:
            - ../base/dev-sample
            - ../base/osdu-base
            - ../base/osdu-istio
            - ../base/osdu-airflow
            - ../base/osdu-azure
          patchesStrategicMerge:
            - dev-sample-values.yaml
            - osdu-istio-values.yaml
            - osdu-airflow-values.yaml
            - self-managed-base-values.yaml
            - default-service-values.yaml
            - token-service-values.yaml
            - partition-service-values.yaml
            - entitlement-service-values.yaml
            - legal-service-values.yaml
            - storage-service-values.yaml
            - schema-service-values.yaml
            - file-service-values.yaml
            - dataset-service-values.yaml
            - indexer-service-values.yaml
            - indexer-queue-values.yaml
            - search-service-values.yaml
            - notification-service-values.yaml
            - register-service-values.yaml
            - unit-service-values.yaml
            - crs-catalog-values.yaml
            - crs-conversion-values.yaml
            - wks-service-values.yaml
          EOF

      - name: Create Helm Values - dev-sample
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/dev-sample-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: env-tool
            namespace: dev-sample
          spec:
            values:
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

      - name: Create Helm Values - osdu-istio
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-istio-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: osdu-istio
            namespace: istio-system
          spec:
            values:
              global:
                azure:
                  tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                  appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

      - name: Create Helm Values - self-managed-base
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/self-managed-base-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: self-managed-base
            namespace: osdu-azure
          spec:
            values:
              fullnameOverride: osdu-svc
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
                oidAuthEnabled: false
              resourceLimits:
                defaultCpuRequests: "100m"
                defaultMemoryRequests: "800Mi"
                defaultCpuLimits: "1000m"
                defaultMemoryLimits: "2Gi"
              identity:
                name: osdu-identity
          EOF

      - name: Create Helm Values - default-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/default-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: default-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: default
                repository: neilpeterson/aks-helloworld
                tag: v1
                path: /*
                replicaCount: 1
                env:
                - name: TITLE
                  value: "Self Managed OSDU - (v0.11)"
          EOF

      - name: Create Helm Values - token-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/token-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: token-service
            namespace: dev-sample
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: token
                repository: $REGISTRY/self-managed-osdu-login
                tag: latest
                path: /login/*
                replicaCount: 1
          EOF

      - name: Create Helm Values - partition-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/partition-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: partition-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: partition
                repository: $REGISTRY/partition
                path: /api/partition/v1/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v1/api-docs"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "*/swagger"
                    - "*/swagger-ui.html"
                    - "*/swagger-resources"
                    - "/api/partition/v1/swagger-resources/*"
                    - "/api/partition/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: partition
                - name: server.servlet.contextPath
                  value: /api/partition/v1/
                - name: server_port
                  value: "80"
                - name: ACCEPT_HTTP
                  value: "true"
                - name: partition_spring_logging_level
                  value: INFO
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_activedirectory_session_stateless
                  value: "false"
                - name: azure_paas_podIdentity_isEnabled
                  value: "true"
                - name: azure_istioauth_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_PARTITION
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
          EOF

      - name: Create Helm Values - entitlement-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/entitlement-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: entitlement-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: entitlements
                repository: $REGISTRY/entitlements
                path: /api/entitlements/v2/*
                probe:
                  path: /api/entitlements/v2/_ah/readiness_check
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/entitlements/v2/info"
                    - "/api/entitlements/v2/swagger-resources/*"
                    - "/api/entitlements/v2/webjars/*"
                env:
                - name: spring_application_name
                  value: entitlements
                - name: server.servlet.contextPath
                  value: /api/entitlements/v2/
                - name: LOGGING_LEVEL
                  value: INFO
                - name: server_port
                  value: "80"
                - name: service_domain_name
                  value: contoso.com
                - name: root_data_group_quota
                  value: "5000"
                - name: redis_ttl_seconds
                  value: "1"
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: "true"
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - legal-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/legal-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: legal-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: legal
                repository: $REGISTRY/legal
                path: /api/legal/v1/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/legal/v1/swagger-resources/*"
                    - "/api/legal/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: legal
                - name: server.servlet.contextPath
                  value: /api/legal/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: LOG_PREFIX
                  value: legal
                - name: azure_storage_container_name
                  value: legal-service-azure-configuration
                - name: azure_storage_enable_https
                  value: true
                - name: legal_service_region
                  value: us
                - name: servicebus_topic_name
                  value: legaltags
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: OBSOLETE
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: true
                - name: SPRING_CONFIG_NAME
                  value: "common,application"
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_LEGAL
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - storage-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/storage-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: storage-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: storage
                repository: $REGISTRY/storage
                path: /api/storage/v2/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                request:
                  cpu: 500m
                  memory: 1Gi
                limit:
                  cpu: 1000m
                  memory: 4Gi
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/storage/v2/swagger-resources/*"
                    - "/api/storage/v2/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: storage
                - name: server.servlet.contextPath
                  value: /api/storage/v2/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: servicebus_topic_name
                  value: recordstopic
                - name: legal_servicebus_topic_name
                  value: legaltagschangedtopiceg
                - name: legal_servicebus_topic_subscription
                  value: eg_sb_legaltagssubscription
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: "OBSOLETE"
                - name: legal_service_endpoint
                  value: http://legal/api/legal/v1
                - name: search_service_endpoint
                  value: http://legal/api/legal/v1
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: crs_conversion_service_endpoint
                  value: http://crs-conversion-service/api/crs/converter/v2
                - name: policy_enabled
                  value: "false"
                - name: policy_service_endpoint
                  value: http://policy-service/api/policy/v1
                - name: schema_endpoints_disabled
                  value: "false"
                - name: azure_istioauth_enabled
                  value: true
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: JAVA_OPTS
                  value: "-XX:InitialRAMPercentage=25.0 -XX:MaxRAMPercentage=50.0"
                - name: "SERVER_TOMCAT_MAXTHREADS"
                  value: "400"
                - name: "SERVER_TOMCAT_MINSPARETHREADS"
                  value: "200"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_STORAGE
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - schema-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/schema-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: schema-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: schema
                repository: $REGISTRY/schema
                path: /api/schema-service/v1/*
                probe:
                  path: /api/schema-service/v1/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/schema-service/v1/swagger-resources/*"
                    - "/api/schema-service/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: schema
                - name: server.servlet.contextPath
                  value: /api/schema-service/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: LOG_PREFIX
                  value: schema
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: "OBSOLETE"
                - name: partition_service_endpoint
                  value: "http://partition/api/partition/v1"
                - name: shared_partition
                  value: opendes    # Make this configurable
                - name: azure_istioauth_enabled
                  value: "true"
                - name: event_grid_enabled
                  value: "false"
                - name: event_grid_topic
                  value: "schemachangedtopic"
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - file-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/file-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: file-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: file
                repository: $REGISTRY/file
                path: /api/file/*
                probe:
                  path: /api/file/v2/readiness_check
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/file/swagger-resources/*"
                    - "/api/file/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: file
                - name: server.servlet.contextPath
                  value: /api/file/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: LOG_PREFIX
                  value: file
                - name: osdu_entitlements_url
                  value: http://entitlements/api/entitlements/v2
                - name: osdu_entitlements_app_key
                  value: OBSOLETE
                - name: APPLICATION_PORT
                  value: 80
                - name: SEARCH_HOST
                  value: http://search/api/search/v2
                - name: JAVA_HEAP_MEMORY
                  value: 4096
                - name: osdu_storage_url
                  value: http://storage/api/storage/v2
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: authorizeAPI
                  value: http://entitlements/api/entitlements/v2
                - name: azure_istioauth_enabled
                  value: "true"
                - name: BATCH_SIZE
                  value: "100"
                - name: SEARCH_QUERY_LIMIT
                  value: "1000"
                - name: KEYVAULT_URL
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: AZURE_CLIENT_ID
                  secret:
                    name: active-directory
                    key: principal-clientid
                - name: AZURE_CLIENT_SECRET
                  secret:
                    name: active-directory
                    key: principal-clientpassword
                - name: AZURE_TENANT_ID
                  secret:
                    name: active-directory
                    key: tenantid
                - name: AZURE_AD_APP_RESOURCE_ID
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - dataset-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/dataset-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: dataset-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: dataset
                repository: $REGISTRY/dataset
                path: /api/dataset/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/dataset/swagger-resources/*"
                    - "/api/dataset/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/readiness_check"
                    - "*/_ah/**"
                env:
                - name: spring_application_name
                  value: dataset
                - name: server.servlet.contextPath
                  value: /api/dataset/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_app_key
                  value: "OBSOLETE"
                - name: storage_service_endpoint
                  value: http://storage/api/storage/v2
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: schema_service_endpoint
                  value: http://schema-service/api/schema-service/v1
                - name: file_service_endpoint
                  value: http://file/api/file/v2/files
                - name: azure_istioauth_enabled
                  value: "true"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: AZURE_APP_RESOURCE_ID
                  secret:
                    name: active-directory
                    key: application-appid
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: azure_application_insights_instrumentation_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - indexer-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/indexer-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: indexer-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: indexer
                repository: $REGISTRY/indexer
                path: /api/indexer/v2/*
                probe:
                  path: /api/indexer/v2/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/indexer/v2/swagger-resources/*"
                    - "/api/indexer/v2/webjars/*"
                    - "*/_dps/task-handlers"
                    - "*/reindex"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: indexer
                - name: server.servlet.contextPath
                  value: /api/indexer/v2/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: servicebus_topic_name
                  value: indexing-progress
                - name: reindex_topic_name
                  value: recordstopic
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: OBSOLETE
                - name: schema_service_url
                  value: http://schema/api/schema-service/v1
                - name: storage_service_url
                  value: http://storage/api/storage/v2
                - name: STORAGE_SCHEMA_HOST
                  value: http://storage/api/storage/v2/schemas
                - name: STORAGE_QUERY_RECORD_FOR_CONVERSION_HOST
                  value: http://storage/api/storage/v2/query/records:batch
                - name: STORAGE_QUERY_RECORD_HOST
                  value: http://storage/api/storage/v2/records
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: "true"
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_INDEXER
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - indexer-queue
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/indexer-queue-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: indexer-queue
            namespace: osdu-azure
          spec:
            values:
              configuration:
              - service: indexer-queue
                repository: $REGISTRY/indexer-queue
                keyvault: true
                request:
                  cpu: 1000m
                  memory: 2Gi
                limit:
                  cpu: 1000m
                  memory: 2Gi
                env:
                - name: spring_application_name
                  value: indexer-queue
                - name: server_port
                  value: 80
                - name: azure_servicebus_topic_name
                  value: recordstopic
                - name: azure_servicebus_topic_subscription
                  value: recordstopicsubscription
                - name: indexer_worker_url
                  value: http://indexer/api/indexer/v2/_dps/task-handlers/index-worker
                - name: PARTITION_API
                  value: http://partition/api/partition/v1
                - name: max_concurrent_calls
                  value: "32"
                - name: executor_n_threads
                  value: "32"
                - name: max_lock_renew_duration_seconds
                  value: "600"
                - name: max_delivery_count
                  value: "5"
                - name: AZURE_CLIENT_ID
                  secret:
                    name: active-directory
                    key: principal-clientid
                - name: AZURE_CLIENT_SECRET
                  secret:
                    name: active-directory
                    key: principal-clientpassword
                - name: AZURE_TENANT_ID
                  secret:
                    name: active-directory
                    key: tenantid
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: AZURE_APP_RESOURCE_ID
                  secret:
                    name: active-directory
                    key: application-appid
                - name: azure_application_insights_instrumentation_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - search-service
        run: |

          APP_INSIGHTS_KEY=$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/appinsights-key --query value -otsv)
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/search-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: search-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: search
                repository: $REGISTRY/search
                path: /api/search/v2/*
                probe:
                  path: /api/search/v2/swagger-ui.html
                  port: http
                keyvault: true
                request:
                  cpu: 500m
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/search/v2/swagger-resources/*"
                    - "/api/search/v2/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                env:
                - name: spring_application_name
                  value: search
                - name: server.servlet.contextPath
                  value: /api/search/v2/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: APPLICATIONINSIGHTS_CONNECTION_STRING
                  value: InstrumentationKey=$APP_INSIGHTS_KEY
                - name: cosmosdb_database
                  value: osdu-db
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: OBSOLETE
                - name: ENVIRONMENT
                  value: evt
                - name: LOG_PREFIX
                  value: search
                - name: ELASTIC_CACHE_EXPIRATION
                  value: 1
                - name: MAX_CACHE_VALUE_SIZE
                  value: 60
                - name: search_service_spring_logging_level
                  value: debug
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: policy_enabled
                  value: "false"
                - name: policy_service_endpoint
                  value: http://policy/api/policy/v1
                - name: azure_istioauth_enabled
                  value: true
                - name: azure_activedirectory_AppIdUri
                  value: api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_SEARCH
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
                - name: AZURE_CLIENT_ID
                  secret:
                    name: active-directory
                    key: principal-clientid
                - name: AZURE_CLIENT_SECRET
                  secret:
                    name: active-directory
                    key: principal-clientpassword
                - name: AZURE_TENANT_ID
                  secret:
                    name: active-directory
                    key: tenantid
          EOF

      - name: Create Helm Values - notification-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/notification-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: notification-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: notification
                repository: $REGISTRY/notification
                path: /api/notification/v1/*
                probe:
                  path: /api/notification/v1/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/notification/v1/swagger-resources/*"
                    - "/api/notification/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                env:
                - name: spring_application_name
                  value: notification-azure
                - name: server.servlet.contextPath
                  value: /api/notification/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: registeration_service_endpoint
                  value: http://register/api/register/v1
                - name: maxCacheSize
                  value:  "20"
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: policy_enabled
                  value: "false"
                - name: policy_service_endpoint
                  value: http://policy/api/policy/v1
                - name: azure_istioauth_enabled
                  value: "true"
                - name: LOG_PREFIX
                  value: "notification"
                - name: service_bus_enabled
                  value: "false"
                - name: event_grid_to_service_bus_enabled
                  value: "false"
                - name: event_grid_enabled
                  value: "true"
                - name: initial_subscription_manager_delay_seconds
                  value: "0"
                - name: consecutive_subscription_manager_delay_seconds
                  value: "1800"
                - name: max_concurrent_calls
                  value: "3"
                - name: executor_n_threads
                  value: "32"
                - name: max_lock_renew_duration_seconds
                  value: "2000"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - register-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/register-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: register-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: register
                repository: $REGISTRY/register
                path: /api/register/v1/*
                probe:
                  path: /api/register/v1/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/register/v1/swagger-resources/*"
                    - "/api/register/v1/webjars/*"
                    - "/api/register/v1/test/challenge/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                env:
                - name: spring_application_name
                  value: register
                - name: server.servlet.contextPath
                  value: /api/register/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: LOG_PREFIX
                  value: register
                - name: cosmosdb_database
                  value: osdu-db
                - name: RECORDS_CHANGE_PUBSUB_ENDPOINT
                  value: https://$DNS_HOST/api/notification/v1/push-handlers/records-changed
                - name: ENTITLEMENTS_API
                  value: http://entitlements/api/entitlements/v2
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: "true"
                - name: azure_serviceBus_enabled
                  value: "false"
                - name: azure_eventGrid_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - unit-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/unit-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: unit-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: unit
                repository: $REGISTRY/unit
                path: /api/unit/*
                probe:
                  path: /api/unit/_ah/readiness_check
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/unit/swagger-resources/*"
                    - "/api/unit/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                pvc:
                - name: unit
                  volume: shared-data
                mount:
                - name: shared-data
                  path: /mnt/unit_catalogs
                env:
                - name: spring_application_name
                  value: unit-service
                - name: server.servlet.contextPath
                  value: /api/unit/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: ENTITLEMENT_URL
                  value: http://entitlements/api/entitlements/v2
                - name: azure_istioauth_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - crs-catalog
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/crs-catalog-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: crs-catalog
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: crs-catalog
                repository: $REGISTRY/crs-catalog
                path: /api/crs/catalog/*
                probe:
                  path: /api/crs/catalog/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/crs/catalog/swagger-resources/*"
                    - "/api/crs/catalog/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                pvc:
                - name: crs
                  volume: shared-data
                mount:
                - name: shared-data
                  path: /mnt/crs_catalogs
                env:
                - name: spring_application_name
                  value: crs-catalog-service
                - name: server.servlet.contextPath
                  value: /api/crs/catalog/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: ENTITLEMENT_URL
                  value: http://entitlements/api/entitlements/v2
                - name: azure_istioauth_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights

          EOF

      - name: Create Helm Values - crs-conversion
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/crs-conversion-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: crs-conversion
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: crs-conversion
                repository: $REGISTRY/crs-conversion
                path: /api/crs/converter/*
                probe:
                  path: /api/crs/converter/swagger-ui.html
                  port: http
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/crs/converter/swagger-resources/*"
                    - "/api/crs/converter/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/_ah/**"
                pvc:
                - name: crs-conversion
                  volume: shared-data
                mount:
                - name: shared-data
                  path: /mnt/crs_conversion
                env:
                - name: spring_application_name
                  value: crs-conversion-service
                - name: server.servlet.contextPath
                  value: /api/crs/converter/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: ENTITLEMENT_URL
                  value: http://entitlements/api/entitlements/v2
                - name: ESRI_DATA_PATH
                  value: /crs-conversion-service
                - name: service_domain_name
                  value: contoso.com
                - name: SIS_DATA
                  value: /mnt/crs_conversion/apachesis_setup/SIS_DATA
                - name: azure_istioauth_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - wks-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/wks-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: wks-service
            namespace: osdu-azure
          spec:
            values:
              configuration:
              - scaledObject: wks
                repository: $REGISTRY/wks
                servicebusSubscription: eg_sb_wkssubscription
                servicebusTopic: recordstopiceg
                keyvault: true
                env:
                - name: spring_application_name
                  value: wks
                - name: server_port
                  value: 80
                - name: cosmosdb_database
                  value: osdu-db
                - name: servicebus_topic_name
                  value: recordstopiceg
                - name: servicebus_topic_subscription
                  value: eg_sb_wkssubscription
                - name: storage_container
                  value: osdu-wks-mappings
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: storage_service_endpoint
                  value: "http://storage/api/storage/v2"
                - name: schema_service_endpoint
                  value: "http://schema/api/schema-service/v1"
                - name: search_service_endpoint
                  value: "http://search/api/search/v2"
                - name: default_tenant
                  value:
                - name: max_concurrent_calls
                  value: "32"
                - name: executor_n_threads
                  value: "32"
                - name: max_lock_renew_duration_seconds
                  value: "600"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: AZURE_CLIENT_ID
                  secret:
                    name: active-directory
                    key: principal-clientid
                - name: AZURE_CLIENT_SECRET
                  secret:
                    name: active-directory
                    key: principal-clientpassword
                - name: AZURE_TENANT_ID
                  secret:
                    name: active-directory
                    key: tenantid
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: AZURE_APP_RESOURCE_ID
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-airflow-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: osdu-airflow
            namespace: airflow
          spec:
            values:
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
              image:
                repository: $REGISTRY
              airflowLogin:
                name: admin
              airflow:
                ingress:
                  host: $DNS_HOST
                  web:
                    annotations:
                      cert-manager.io/cluster-issuer: letsencrypt-prod-dns
                    host: $DNS_HOST
                externalDatabase:
                  host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg.postgres.database.azure.com
                  user:  osdu_admin@$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg
                externalRedis:
                  host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-cache.redis.cache.windows.net
                airflow:
                  extraEnv:
                    - name: AIRFLOW_VAR_AZURE_DNS_HOST
                      value: "$DNS_HOST"
          EOF

      - name: GitOps CheckIn
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Initialize Software Install'
          add: '.'
